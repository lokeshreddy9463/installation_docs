Creating maven project:
----------------------------
step1:
quick maven project:
--------------------
mvn archetype:generate 
-DgroupId=com.mycompany.app 
-DartifactId=trucks 
-DarchetypeArtifactId=maven-archetype-quickstart 
-DarchetypeVersion=1.4 
-DinteractiveMode=false

(OR)
web maven project:
--------------------
mvn archetype:generate  
-DgroupId = com.companyname.automobile  
-DartifactId = trucks 
-DarchetypeArtifactId = maven-archetype-webapp  
-DinteractiveMode = false

groupId:wargroupid
artifactId: simpleweb


step2:
cd my-maven-project
step3:
mvn validate: validate the project is correct and all necessary information is available
mvn compile: compile the source code of the project
mvn test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
mvn package: take the compiled code and package it in its distributable format, such as a JAR.
mvn integration-test: process and deploy the package if necessary into an environment where integration tests can be run
mvn verify: run any checks to verify the package is valid and meets quality criteria
mvn install: install the package into the local repository, for use as a dependency in other projects locally
mvn deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.

step4:
open a jar file:
[ec2-user@ip-172-31-47-0 target]$ jar -tvf target/simplejar-1.0-SNAPSHOT.jar

step5:
Above command will list the javafile output
java -cp target/simplejar-1.0-SNAPSHOT.jar simplejar.App

To store war file local machine command is:
---------------------------------------------
mvn install

To store war file remote repository command is:
---------------------------------------------
mvn deploy